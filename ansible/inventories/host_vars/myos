---
# file: inventories/host_vars/myos

aws_access_key_id: "{{ lookup('env','ANSIBLE_AWS_ACCESS_KEY_ID') }}"
aws_output: "{{ lookup('env','ANSIBLE_AWS_DEFAULT_OUTPUT') or 'json' }}"
aws_region: "{{ lookup('env','ANSIBLE_AWS_DEFAULT_REGION') or 'eu-west-1' }}"
aws_secret_access_key: "{{ lookup('env','ANSIBLE_AWS_SECRET_ACCESS_KEY') }}"
disks_to_mount:
- disk: /dev/xvdb
  disable_periodic_fsck: true
  fstype: ext4
  mount_options: defaults
  mount: /var/lib/docker
  service: docker
- disk: "{{ lookup('env','ANSIBLE_DISKS_NFS_DISK') }}"
  fstype: nfs
  mount_options: "{{ lookup('env','ANSIBLE_DISKS_NFS_OPTIONS') }}"
  mount: "{{ lookup('env','ANSIBLE_DISKS_NFS_PATH') }}"
disks_services:
- { "name": "rpc.statd", "state": "started", "enabled": "yes" }
docker_image_tag: "{{ lookup('env','ANSIBLE_DOCKER_IMAGE_TAG') or 'latest' }}"
docker_registry: "{{ lookup('env','ANSIBLE_DOCKER_REGISTRY') }}"
hosts_packages:
- { "name": "ansible", "state": "present" }
hosts_services:
- { "name": "myos", "state": "stopped", "enabled": "yes" }
- { "name": "zram", "state": "started", "enabled": "yes" }
hosts_update: true
hosts_user_env:
- ANSIBLE_AWS_ACCESS_KEY_ID
- ANSIBLE_AWS_SECRET_ACCESS_KEY
- ANSIBLE_CONFIG
- ANSIBLE_DISKS_NFS_DISK
- ANSIBLE_DISKS_NFS_OPTIONS
- ANSIBLE_DISKS_NFS_PATH
- ANSIBLE_DOCKER_IMAGE_TAG
- ANSIBLE_DOCKER_REGISTRY
- ANSIBLE_EXTRA_VARS
- ANSIBLE_GIT_DIRECTORY
- ANSIBLE_GIT_KEY_FILE
- ANSIBLE_GIT_REPOSITORY
- ANSIBLE_INVENTORY
- ANSIBLE_MYOS
- ANSIBLE_PLAYBOOK
- COMPOSE_PROJECT_NAME
- ENV
- MYOS_TAGS
hosts_user_rc_enable: true
hosts_user_rc_functions:
- { "path": "10_prompt_set", "state": "touch" }
- { "path": "10_ps1_set", "state": "touch" }
- { "path": "30_pfetch", "state": "touch" }
- { "path": "30_screen_attach", "state": "touch" }
- { "path": "40_ssh_add", "state": "touch" }
remotes_services:
- { "name": "ansible", "state": "stopped", "enabled": "yes" }
